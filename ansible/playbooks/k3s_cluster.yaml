---
#
# Play 1: Prepare ALL nodes for K3s
# This play runs on both server and agent nodes. It installs necessary
# packages and prepares the system.
#
- name: 1. Prepare all K3s nodes
  hosts: master,workers
  become: yes
  tasks:
    - name: Update apt package cache
      ansible.builtin.apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Disable swap for K3s
      ansible.builtin.command: swapoff -a
      when: ansible_swaptotal_mb > 0

    - name: Remove swap entry from /etc/fstab
      ansible.builtin.lineinfile:
        path: /etc/fstab
        regexp: '\s+swap\s+'
        state: absent

    - name: Load required kernel modules
      ansible.builtin.modprobe:
        name: "{{ item }}"
        state: present
      loop:
        - overlay
        - br_netfilter

    - name: Ensure required kernel modules are loaded on boot
      ansible.builtin.copy:
        dest: /etc/modules-load.d/k8s.conf
        content: |
          overlay
          br_netfilter
    # K3s uses its own container runtime (containerd) and doesn't require manual configuration here.
    - name: Set required sysctl params for Kubernetes networking
      ansible.builtin.sysctl:
        name: "{{ item.key }}"
        value: "{{ item.value }}"
        sysctl_file: /etc/sysctl.d/k8s.conf
        state: present
        reload: yes
      loop:
        - { key: 'net.bridge.bridge-nf-call-iptables', value: '1' }
        - { key: 'net.bridge.bridge-nf-call-ip6tables', value: '1' }
        - { key: 'net.ipv4.ip_forward', value: '1' }

    - name: Install prerequisite packages
      ansible.builtin.apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
        state: present

#
# Play 2: Install and Configure K3s Server
# This play runs ONLY on the server node.
#
- name: 2. Install and Configure K3s Server
  hosts: master
  become: yes
  tasks:
    - name: Install K3s server
      ansible.builtin.shell: |
        curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC="--disable traefik --disable servicelb --disable metrics-server --disable local-storage --cluster-cidr 10.10.0.0/16" sh -
      args:
        creates: /usr/local/bin/k3s

    - name: Get K3s node token
      ansible.builtin.command: cat /var/lib/rancher/k3s/server/node-token
      register: k3s_node_token
      changed_when: false

    - name: Store K3s node token for agent nodes
      ansible.builtin.add_host:
        name: "k3s_node_token"
        value: "{{ k3s_node_token.stdout }}"

    - name: Create ~/.kube/  directory
      ansible.builtin.file:
        path: "/home/{{ ansible_user }}/.kube"
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0700'

    - name: Copy K3s config to user's .kube directory
      ansible.builtin.copy:
        src: /etc/rancher/k3s/k3s.yaml
        dest: "/home/{{ ansible_user }}/.kube/config"
        remote_src: yes
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0644'
    - name: Ensure KUBECONFIG is set for the user
      ansible.builtin.lineinfile:
        path: "/home/{{ ansible_user }}/.bashrc"
        line: 'export KUBECONFIG="/home/{{ ansible_user }}/.kube/config"'
        state: present
        create: yes

    - name: Get /var/lib/rancher/k3s/server/node-token value and store it K3S_TOKEN variable
      ansible.builtin.command: cat /var/lib/rancher/k3s/server/node-token
      register: k3s_token
      changed_when: false

    - name: Get master's default IPv4 address and store it K3S_MASTER_ADDRESS
      ansible.builtin.debug:
        msg: "{{ ansible_default_ipv4['address'] }}"
      register: k3s_master_address
      changed_when: false

    - name: Show the command line to add a worker node to cluster
      debug:
        msg: "Run curl -sfL https://get.k3s.io | K3S_URL=https://{{ k3s_master_address.msg }}:6443 K3S_TOKEN={{ k3s_token.stdout }} sh -"


#    - name: Apply Calico CNI for pod networking (K3s default is Flannel, but Calico is often preferred)
#      ansible.builtin.command: kubectl apply -f https://raw.githubusercontent.com/projectcalico/calico/v3.28.0/manifests/calico.yaml # Replace with your preferred CNI if not Calico
#      environment:
#        KUBECONFIG: "/home/{{ ansible_user }}/.kube/config"
#      become: no # Run as the user, not root
#      changed_when: false
