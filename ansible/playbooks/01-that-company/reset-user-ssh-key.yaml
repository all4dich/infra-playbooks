---
- name: Register New SSH Key
  vars_prompt:
    - name: target_host
      prompt: "Set target host"
      private: no
    - name: target_user
      prompt: "Set Username"
      private: no
    - name: user_email
      prompt: "Set user email"
      private: no
  vars:
    key_file_name: "new_ssh_key_file"
    email_sender: "administrator@nota.ai"
  hosts: "{{ target_host }}"
  tasks:
    - name: Get Hostname and IP Address
      shell: "echo {{ ansible_hostname }} : {{ ansible_default_ipv4.address }}"
      register: ip_outputs
    - set_fact:
        all_hosts: "{{ ansible_play_hosts | map('extract', hostvars, 'ip_outputs') | map(attribute='stdout') | list }}"
      delegate_to: localhost
      run_once: true
    - name: Create SSH Directory
      become: true
      file:
        path: "~{{ target_user }}/.ssh"
        state: directory
        owner: "{{ target_user }}"
        group: "{{ target_user }}"
        mode: 0700
    - name: Create new ssh key for a user
      delegate_to: localhost
      run_once: true
      community.crypto.openssh_keypair:
        path: "{{ key_file_name }}"
        mode: 0600
    - name: Create a public key from private key file
      delegate_to: localhost
      run_once: true
      shell: ssh-keygen -y -f {{ key_file_name }} -C {{ target_user }}@nota > {{ key_file_name }}.pub
    - name: Upload public key
      become: true
      ansible.builtin.copy:
        src: "{{ key_file_name }}.pub"
        dest: "~{{ target_user }}/.ssh/{{ key_file_name }}.pub"
        owner: "{{ target_user }}"
        group: "{{ target_user }}"
        mode: 0700
    - name: Set authorized key
      become: true
      shell: su - {{ target_user }} bash -c 'cat ~{{ target_user }}/.ssh/{{ key_file_name }}.pub >> ~{{ target_user }}/.ssh/authorized_keys'
    - name: Send a key file to a user
      delegate_to: localhost
      run_once: true
      community.general.mail:
        host: "{{ lookup('ansible.builtin.env', 'SMTP_HOST') }}"
        username: "{{ lookup('ansible.builtin.env', 'SMTP_USERNAME') }}"
        password: "{{ lookup('ansible.builtin.env', 'SMTP_PASSWORD') }}"
        port: "{{ lookup('ansible.builtin.env', 'SMTP_PORT')|default('587')|int }}"
        to: "{{ user_email }}" 
        sender: "{{ email_sender }}"
        subject: Your account '{{ target_user }} on {{ ansible_play_hosts | join(', ') }}' get a new ssh key
        body: |
            A new ssh public key is appened to ~{{ target_user }}/.ssh/authorized_keys
          
            Hosts:
            {% for item in all_hosts %}
              * {{ item }}
            {% endfor %}

            You can log onto {{ ansible_hostname }} with an attached private key file.
            Copy a file to $HOME/.ssh and change its permission as 0600

              $> chmod 0600 ~/.ssh/{{ key_file_name | basename }}
              $> ssh -p 2222 -i ~/.ssh/{{ key_file_name | basename }} {{ target_user}}@HOST_ADDRESS
        attach:
          - "{{ key_file_name }}"
    - name: Remove a key file
      delegate_to: localhost
      run_once: true
      file:
        path: "{{ item }}"
        state: absent
      with_items:
        - "{{ key_file_name }}"
        - "{{ key_file_name }}.pub"
