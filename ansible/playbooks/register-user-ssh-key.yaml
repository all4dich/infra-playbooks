---
- name: Register New SSH Key
  vars_prompt:
    - name: target_host
      prompt: "Set target host"
      private: no
    - name: target_user
      prompt: "Set Username"
      private: no
    - name: user_email
      prompt: "Set user email"
      private: no
  vars:
    key_file_name: "new_ssh_key_file"
    email_sender: "administrator@nota.ai"
  hosts: "{{ target_host }}"
  become: yes
  tasks:
    - name: Create SSH Directory
      file:
        path: "~{{ target_user }}/.ssh"
        state: directory
        owner: "{{ target_user }}"
        group: "{{ target_user }}"
        mode: 0700
    - name: Create new ssh key for a user
      community.crypto.openssh_keypair:
        owner: "{{ target_user }}"
        group: "{{ target_user }}"
        mode: 0600
        path: "~{{ target_user }}/.ssh/{{ key_file_name }}"        
    - name: Set authorized key
      shell: su - {{ target_user }} bash -c 'cat ~{{ target_user }}/.ssh/{{ key_file_name }}.pub >> ~{{ target_user }}/.ssh/authorized_keys'
    - name: Send a key file to a user
      community.general.mail:
        host: "{{ lookup('ansible.builtin.env', 'SMTP_HOST') }}"
        username: "{{ lookup('ansible.builtin.env', 'SMTP_USERNAME') }}"
        password: "{{ lookup('ansible.builtin.env', 'SMTP_PASSWORD') }}"
        port: "{{ lookup('ansible.builtin.env', 'SMTP_PORT')|default('587')|int }}"
        to: "{{ user_email }}" 
        sender: "{{ email_sender }}"
        subject: Your account '{{ target_user }} on {{ target_host }}' get a new ssh key
        body: |
            A new ssh public key is appened to ~{{ target_user }}/.ssh/authorized_keys

            You can log onto {{ target_host }} with an attached private key file.
            Copy a file to $HOME/.ssh and change its permission as 0600

              $> chmod 0600 ~/.ssh/{{ key_file_name }}
              $> ssh -p 2222 -i ~/.ssh/{{ key_file_name }} {{ target_user}}@{{ ansible_default_ipv4.address }}
        attach:
          - "~{{ target_user}}/.ssh/{{ key_file_name }}"
    - name: Download a key file
      fetch:
        src: "~{{ target_user }}/.ssh/{{ key_file_name }}"
        dest: ./{{ key_file_name }}_{{ target_user }}
        flat: yes
    - name: Remove a key file on the server
      file:
        path: "{{ item }}"
        state: absent
      with_items:
        - ~{{ target_user }}/.ssh/{{ key_file_name }}
        - ~{{ target_user }}/.ssh/{{ key_file_name }}.pub
