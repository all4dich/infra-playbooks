---
- name: Install Go environment
  hosts: all
  tasks:
    - name: Run `apt-get update`
      apt:
        state: present
        update_cache: yes
      when: ansible_distribution == 'Ubuntu'
      become: true
    - name: Remove old Go root directory
      file:
        state: absent
        path: "{{ go_target_directory }}/go"
    - name: Remove old downloaded files
      file:
        state: absent
        path: /tmp/{{ go_tarball_name }}
    - name: Download Go tarball
      get_url:
        url: https://go.dev/dl/{{ go_tarball_name }}
        dest: /tmp/{{ go_tarball_name }}
    - name: Make go_target_directory
      file:
        state: directory
        path : "{{ go_target_directory }}"
    - name: Extract Go tarball using tar command
      command: "tar -C {{ go_target_directory }} -xzf /tmp/{{ go_tarball_name }}"
      args:
        creates: "{{ go_target_directory }}/go"
  vars:
    ansible_become_password: sunjoo
    ansible_os_family: "{{ ansible_facts['system'] | lower }}"
    ansible_architecture: "{{ (ansible_facts['architecture'] | lower) | replace('aarch64', 'arm64') }}"
    # Set the Go version to install
    go_version: "1.24.4"
    # Set the go tarball name based on the version
    go_tarball_name: "go{{ go_version }}.{{ ansible_os_family }}-{{ ansible_architecture }}.tar.gz"
    # Set the Go download URL based on architecture
    go_download_url: "https://go.dev/dl/go{{ go_version }}.{{ ansible_os_family }}-{{ ansible_architecture }}.tar.gz"
    go_target_directory: >
      {% if ansible_os_family == 'linux' %}
      ~/.local
      {% else %}
      ~/program
      {% endif %}
